// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id            String   @id @default(uuid())
  title         String
  type          RoomType @default(SINGLE)
  hasRoomonitor Boolean // Si tiene un dispositivo roomonitor
  maxGuests     Int      @map("max_guests")
  minGuests     Int      @default(1) @map("min_guests")
  isAvailable   Boolean  @default(true) @map("is_available")

  RoomAmenities RoomAmenities[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("rooms")
}

model Amenity {
  id   String @id @default(uuid())
  name String

  RoomAmenities RoomAmenities[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("amenities")
}

model RoomAmenities {
  id String @id @default(uuid())

  amenity   Amenity @relation(fields: [amenityId], references: [id])
  amenityId String  @map("amenity_id")

  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId String @map("room_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("room_amenities")
}

// Podrian ser muchas mas pero seleccione las m√°s comunes
enum RoomType {
  SINGLE
  DOUBLE
  TWIN
  TRIPLE
  QUADRUPLE

  @@map("room_type")
}
